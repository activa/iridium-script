<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3083A725-1D92-4789-B51D-B6756137D44A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Iridium.Script</RootNamespace>
    <AssemblyName>Iridium-Script</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile111</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Context\ContextFactory.cs" />
    <Compile Include="Context\DynamicObject.cs" />
    <Compile Include="Context\FlexContext.cs" />
    <Compile Include="Context\IDynamicObject.cs" />
    <Compile Include="Context\IParserContext.cs" />
    <Compile Include="Context\ParserContext.cs" />
    <Compile Include="Context\ParserContextBehavior.cs" />
    <Compile Include="Context\PropertyHelper.cs" />
    <Compile Include="ExpressionParser\Exceptions\BadArgumentException.cs" />
    <Compile Include="ExpressionParser\Exceptions\ExpressionEvaluationException.cs" />
    <Compile Include="ExpressionParser\Exceptions\IllegalAssignmentException.cs" />
    <Compile Include="ExpressionParser\Exceptions\IllegalOperandsException.cs" />
    <Compile Include="ExpressionParser\Exceptions\LexerException.cs" />
    <Compile Include="ExpressionParser\Exceptions\LiteralException.cs" />
    <Compile Include="ExpressionParser\Exceptions\ParserException.cs" />
    <Compile Include="ExpressionParser\Exceptions\UnknownPropertyException.cs" />
    <Compile Include="ExpressionParser\Expression\Abstract\Exp.cs" />
    <Compile Include="ExpressionParser\Expression\Abstract\Expression.cs" />
    <Compile Include="ExpressionParser\Expression\Abstract\ExpressionWithContext.cs" />
    <Compile Include="ExpressionParser\Expression\AddExpression.cs" />
    <Compile Include="ExpressionParser\Expression\AndAlsoExpression.cs" />
    <Compile Include="ExpressionParser\Expression\AsExpression.cs" />
    <Compile Include="ExpressionParser\Expression\AssignmentExpression.cs" />
    <Compile Include="ExpressionParser\Expression\BinaryArithmicExpression.cs" />
    <Compile Include="ExpressionParser\Expression\BinaryExpression.cs" />
    <Compile Include="ExpressionParser\Expression\BitwiseComplementExpression.cs" />
    <Compile Include="ExpressionParser\Expression\CallExpression.cs" />
    <Compile Include="ExpressionParser\Expression\CoalesceExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ConditionalExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ConstructorExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ContainerClasses\ClassName.cs" />
    <Compile Include="ExpressionParser\Expression\ContainerClasses\IMethodDefinition.cs" />
    <Compile Include="ExpressionParser\Expression\ContainerClasses\InstanceMethod.cs" />
    <Compile Include="ExpressionParser\Expression\ContainerClasses\MethodDefinition.cs" />
    <Compile Include="ExpressionParser\Expression\ContainerClasses\StaticMethod.cs" />
    <Compile Include="ExpressionParser\Expression\DefaultValueExpression.cs" />
    <Compile Include="ExpressionParser\Expression\DivideExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ExpressionHelper\BinaryExpressionHelper.cs" />
    <Compile Include="ExpressionParser\Expression\FieldExpression.cs" />
    <Compile Include="ExpressionParser\Expression\FunctionValueExpression.cs" />
    <Compile Include="ExpressionParser\Expression\IndexExpression.cs" />
    <Compile Include="ExpressionParser\Expression\IsExpression.cs" />
    <Compile Include="ExpressionParser\Expression\MultiplyExpression.cs" />
    <Compile Include="ExpressionParser\Expression\NegationExpression.cs" />
    <Compile Include="ExpressionParser\Expression\OrElseExpression.cs" />
    <Compile Include="ExpressionParser\Expression\RangeExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ReturnExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ReturnValueExpression.cs" />
    <Compile Include="ExpressionParser\Expression\Scripting\ForEachExpression.cs" />
    <Compile Include="ExpressionParser\Expression\Scripting\FunctionDefinitionExpression.cs" />
    <Compile Include="ExpressionParser\Expression\Scripting\IfExpression.cs" />
    <Compile Include="ExpressionParser\Expression\Scripting\InExpression.cs" />
    <Compile Include="ExpressionParser\Expression\Scripting\WhileExpression.cs" />
    <Compile Include="ExpressionParser\Expression\SequenceExpression.cs" />
    <Compile Include="ExpressionParser\Expression\SubtractExpression.cs" />
    <Compile Include="ExpressionParser\Expression\TypeCastExpression.cs" />
    <Compile Include="ExpressionParser\Expression\TypeOfExpression.cs" />
    <Compile Include="ExpressionParser\Expression\UnaryExpression.cs" />
    <Compile Include="ExpressionParser\Expression\UnaryMinusExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ValueExpression.cs" />
    <Compile Include="ExpressionParser\Expression\ValueOrNullExpression.cs" />
    <Compile Include="ExpressionParser\Expression\VariableExpression.cs" />
    <Compile Include="ExpressionParser\Parser\ExpressionParser.cs" />
    <Compile Include="ExpressionParser\Parser\ExpressionVisitor.cs" />
    <Compile Include="ExpressionParser\Parser\IValueWithType.cs" />
    <Compile Include="ExpressionParser\Parser\OperatorAssociativity.cs" />
    <Compile Include="ExpressionParser\Parser\RPNExpression.cs" />
    <Compile Include="ExpressionParser\Parser\TokenEvaluator.cs" />
    <Compile Include="ExpressionParser\Parser\TokenType.cs" />
    <Compile Include="ExpressionParser\Parser\ValueWithType.cs" />
    <Compile Include="ExpressionParser\Tokenizer\ExpressionToken.cs" />
    <Compile Include="ExpressionParser\Tokenizer\ExpressionTokenizer.cs" />
    <Compile Include="ExpressionParser\Tokenizer\ExpressionTokenMatcher.cs" />
    <Compile Include="ExpressionParser\Tokenizer\FunctionCallToken.cs" />
    <Compile Include="Parsers\CSharp\Parser\CSharpEvaluator.cs" />
    <Compile Include="Parsers\CSharp\Parser\CSharpParser.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\CSharpTokenizer.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\CharLiteralMatcher.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\DecimalLiteralMatcher.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\IntegerLiteralMatcher.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\StringLiteralMatcher.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\TypeCastMatcher.cs" />
    <Compile Include="Parsers\CSharp\Tokenizer\Tokens\VariableMatcher.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ScriptExtensions.cs" />
    <Compile Include="TemplateParser\CompiledTemplate.cs" />
    <Compile Include="TemplateParser\Exceptions\TemplateParserException.cs" />
    <Compile Include="TemplateParser\Exceptions\TemplateParsingException.cs" />
    <Compile Include="TemplateParser\Exceptions\TemplateRenderingException.cs" />
    <Compile Include="TemplateParser\Nodes\ExpressionTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\ForEachTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\IfTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\IncludeFileTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\MacroCallTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\MacroDefinitionTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\ParseFileTemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\TemplateNode.cs" />
    <Compile Include="TemplateParser\Nodes\TextTemplateNode.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\DoubleCurly\DoubleCurly.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\DoubleCurly\DoubleCurlyTokenizer.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\ProMesh\ProMesh.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\ProMesh\ProMeshTokenizer.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\SmartExpressionMatcher.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\Velocity\Velocity.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\Velocity\VelocityTokenizer.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\WrappedExpressionMatcher.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\Xml\Xml.cs" />
    <Compile Include="TemplateParser\TemplateConfigs\Xml\XmlTokenizer.cs" />
    <Compile Include="TemplateParser\TemplateParser.cs" />
    <Compile Include="TemplateParser\TemplateParserConfig.cs" />
    <Compile Include="TemplateParser\Tokenizer\ForeachTemplateToken.cs" />
    <Compile Include="TemplateParser\Tokenizer\TemplateToken.cs" />
    <Compile Include="TemplateParser\Tokenizer\TemplateTokenizer.cs" />
    <Compile Include="TemplateParser\Tokenizer\TemplateTokenMatcher.cs" />
    <Compile Include="TemplateParser\Tokenizer\TemplateTokenType.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="Velox.Dynamo.nuspec" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Iridium-Core, Version=1.1.2.33720, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\..\..\Activa\Projects\IRLeagues\packages\iridium.core.1.1.2.16\lib\portable-net45+win8+wpa81\Iridium-Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>